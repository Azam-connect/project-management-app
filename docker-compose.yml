services:
  db:
    image: mongo:latest
    container_name: pma-mongo
    # restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: tiger
    # ports:
    #   - 27017:27017
    volumes:
      - mongo-data:/data/db
    networks:
      - pma-network
    healthcheck:
      test: ["CMD", "mongosh", "--username", "root", "--password", "tiger", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: dockerfiles/app.dockerfile
    container_name: pma-backend
    # restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 3001:3001
    command: ["npm", "run", "start"]
    volumes:
      - logs:/backend/logs
      - uploads:/backend/uploads
    networks:
      - pma-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:3001
    container_name: pma-frontend
    # restart: unless-stopped
    depends_on:
      - backend
    ports:
      - 8000:80
    networks:
      - pma-network

  mongo-express:
    image: mongo-express:latest
    container_name: pma-mongo-express
    depends_on:
      - db
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: db
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: tiger
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    networks:
      - pma-network

volumes:
  mongo-data:
  logs:
  uploads:

networks:
  pma-network:
    driver: bridge